name: KBOT-CICD

on: 
    push:
      branches: 
        - develop


jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Run test
        run: make test

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build Docker image
        run: make image

      - name: Push Docker image
        run: make push

      - name: Show image name
        run: |
          echo "IMAGE: ghcr.io/bwoogmy/kbot:$(make --quiet print-version)"



  cd:
    name: CD
    needs: ci
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set VERSION
        run: echo "VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      
      - name: Set up yq
        uses: mikefarah/yq@v4.44.1

      - name: Update Helm values.yaml with new image tag
        run: yq -i '.image.tag = env(VERSION)' helm/values.yaml

      - name: Print git remote
        run: git remote -v

      - name: Commit and push updated Helm values.yaml
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git remote -v
          git add helm/values.yaml
          git commit -am "ci: update image tag to $VERSION" || echo "No changes to commit"
          git push origin HEAD:develop

 


